name: Gradle CI & Auto-Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

env:
  JAVA_VERSION: '23'   # keep as you had it (ensure your Gradle wrapper supports JDK 23)

jobs:
  build-test-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Gradle (cache)
        uses: gradle/actions/setup-gradle@v4

      - name: Ensure Gradle wrapper is executable
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

      # --- Use default bump logic (Conventional Commits) ---
      - name: Determine and create next tag
        id: tag
        if: ${{ github.run_attempt == 1 }}  # avoid double-bump on re-runs
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # no custom options -> defaults

      - name: Show new version
        run: |
          echo "new_tag=${{ steps.tag.outputs.new_tag }}"
          echo "new_version=${{ steps.tag.outputs.new_version }}"

      # Build using the version without the prefix (action provides new_version)
      - name: Assemble JAR(s)
        run: ./gradlew clean assemble -Pversion="${{ steps.tag.outputs.new_version }}" --no-daemon

      - name: Prepare stable-named JAR
        run: |
          set -euo pipefail
          JAR="$(find . -path '*/build/libs/*.jar' -type f \
                 ! -name '*-sources.jar' ! -name '*-javadoc.jar' ! -name '*-plain.jar' \
                 | head -n1)"
          mkdir -p dist
          cp "$JAR" dist/testgate-plugin.jar

      - name: Create Release and upload JAR(s)
        if: ${{ github.run_attempt == 1 && steps.tag.outputs.new_tag }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: ${{ steps.tag.outputs.new_tag }}
          body: ${{ steps.tag.outputs.changelog }}
          files: |
            dist/testgate-plugin.jar
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
