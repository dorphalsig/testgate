name: Test & Replace Packages (gh)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - uses: gradle/actions/setup-gradle@v3

      # Validate what's in the environment (gh is preinstalled on hosted runners)
      - name: Validate prerequisites
        run: |
          set -euo pipefail
          echo "gh: $(gh --version | head -n1)"
          echo "Java:"
          java -version
          echo "Gradle wrapper present?"; test -x ./gradlew && echo "yes" || (echo "no" && exit 1)

      # Nuke ALL versions of ALL Maven packages (org + user scopes) using gh
      - name: Delete ALL package versions (org/user)
        if: github.event_name != 'pull_request'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # must have admin access to packages
          OWNER: ${{ github.repository_owner }}
        shell: bash
        run: |
          set -euo pipefail
          nuke_scope() {
            local scope="$1" # 'orgs' or 'users'
            echo "Listing ${scope}/${OWNER} Maven packages…"
            # --paginate handles multi-page results; --jq extracts names cleanly
            pkgs=$(gh api --paginate "/${scope}/${OWNER}/packages?package_type=maven" --jq '.[].name' 2>/dev/null || true)
            [[ -z "${pkgs}" ]] && echo "No Maven packages under ${scope}/${OWNER}" && return 0

            while IFS= read -r pkg; do
              echo "Deleting ALL versions of ${pkg} in ${scope}/${OWNER}"
              # List *all* version IDs for this package
              gh api --paginate "/${scope}/${OWNER}/packages/maven/${pkg}/versions" --jq '.[].id' \
              | while read -r vid; do
                  echo " - deleting version id=${vid}"
                  # Keep going even if a specific version cannot be deleted (e.g., >5k downloads)
                  gh api -X DELETE "/${scope}/${OWNER}/packages/maven/${pkg}/versions/${vid}" || echo "   (skip/fail id=${vid})"
                done
            done <<< "${pkgs}"
          }

          # Try both scopes idempotently—one of them will match your owner type
          nuke_scope orgs || true
          nuke_scope users || true

      - name: Test & build
        run: ./gradlew check build --stacktrace

      - name: Publish to GitHub Packages
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew publish
