name: Gradle CI & Auto-Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write   # needed for tags & releases

env:
  JAVA_VERSION: '23'   # change if you need 21/11/etc.

jobs:
  build-test-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # required so we can compute the next tag

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Gradle (cache)
        uses: gradle/actions/setup-gradle@v4

      - name: Ensure Gradle wrapper is executable
        run: chmod +x ./gradlew

      # ---------- Test ----------
      - name: Run tests
        run: ./gradlew test --no-daemon

      # ---------- Auto-bump tag (Conventional Commits) ----------
      # Bump rules:
      #  - "BREAKING CHANGE" or "feat!": major
      #  - "feat": minor
      #  - otherwise: patch
      - name: Determine and create next tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          release_branches: main
          tag_prefix: v

      - name: Show new version
        run: echo "New version is ${{ steps.tag.outputs.new_tag }}"

      # ---------- Build with bumped version ----------
      # Pass the version to Gradle; ensure your build.gradle uses 'version' from project properties.
      - name: Assemble JAR(s)
        run: |
          VERSION="${{ steps.tag.outputs.new_tag }}"
          ./gradlew clean assemble -Pversion="${VERSION#v}" --no-daemon

      # ---------- Create GitHub Release & upload JAR(s) ----------
      - name: Create Release and upload JAR(s)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: ${{ steps.tag.outputs.new_tag }}
          body: ${{ steps.tag.outputs.changelog }}
          files: |
            build/libs/*.jar
            **/build/libs/*.jar
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
